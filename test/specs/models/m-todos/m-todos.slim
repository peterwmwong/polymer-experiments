== html_test 'models/m-todos.html'

  / Setup
  / -----
  coffee:
    window.localStorage.removeItem 'ioi-store'
    window.localStorage.setItem 'ioi-store', JSON.stringify [
      {text: 'one', done: true}
      {text: 'two', done: false}
      {text: 'three', done: true}
    ]

  / Test Element
  / ------------
  m-todos#mTodos
  
  coffee:
    ready ->
      mTodos = document.getElementById 'mTodos'
      mTodos.addEventListener 'm-todos-load', ->

        # Test: <initialization>
        expect(mTodos.todos, 'Loads initial todos from localstorage')
          .to.deep.equal [
            {text: 'one', done: true}
            {text: 'two', done: false}
            {text: 'three', done: true}
          ]

        # Test: addTodo()
        mTodos.addTodo text:'zero', done:false

        expect(mTodos.todos, 'add a todo')
          .to.deep.equal [
            {text: 'zero', done: false}
            {text: 'one', done: true}
            {text: 'two', done: false}
            {text: 'three', done: true}
          ]

        expect(JSON.parse(window.localStorage.getItem('ioi-store')), 'stores newly added a todo')
          .to.deep.equal [
            {text: 'zero', done: false}
            {text: 'one', done: true}
            {text: 'two', done: false}
            {text: 'three', done: true}
          ]

        # Test: removeTodo()
        mTodos.removeTodo mTodos.todos[1]

        expect(mTodos.todos, 'remove a todo')
          .to.deep.equal [
            {text: 'zero', done: false}
            {text: 'two', done: false}
            {text: 'three', done: true}
          ]

        expect(JSON.parse(window.localStorage.getItem('ioi-store')), 'removes todo from store')
          .to.deep.equal [
            {text: 'zero', done: false}
            {text: 'two', done: false}
            {text: 'three', done: true}
          ]

        # Test: removeTodo() for a bogus todo
        mTodos.removeTodo {}

        expect(mTodos.todos, 'remove a bogus todo')
          .to.deep.equal [
            {text: 'zero', done: false}
            {text: 'two', done: false}
            {text: 'three', done: true}
          ]

        done()
      