link rel='import' href='v-todo-input.html'

polymer-element name='v-todo-item' attributes='todo'

  template
    link rel='stylesheet' href='v-todo-item.css'

    #btnBack [ touch-action="none"
               on-click="onEndEditingTodo"
               on-pointerup="onEndEditingTodo" ]
      | &lt;

    #wrap
      #panelContainer
        .basicPanel
          .editTodoTextWrap
            input#editTodoText [ is="v-todo-input"
                                 value="{{ todo.model.text }}"
                                 on-blurred="onBlur"
                                 on-keypres="onKeypress" ]

        //- TODO: extract into new element
        .detailedPanelContainer
          #detailedPanel
            .header
              | NOTES

            .section
              textarea.notes [ value="{{ todo.model.notes }}"
                               rows="7"
                               placeholder="Leave yourself a note..."
                               on-click="onNotesFocus" ]


  coffee:
    # TODO: Reassess Web Animations
    #       We're doing a lot of adhoc coding of transitions.
    #       Some in CSS. Some in JS. Let's unify.
    ANIMATION_DURATION_MS = 250

    Polymer 'v-todo-item',
      todo: undefined

      ready: ->
        @asyncMethod ->
          @$.wrap.addEventListener 'touchstart', => @preventOverscroll()

      todoChanged: ->
        if @todo
          @onStartEditingTodo()
          # HACK(iOS): Delayed focus avoids a flicker
          setTimeout (=>@$.editTodoText.focus()), ANIMATION_DURATION_MS*1.5

      ###
      Returns the y-coordinate to animate to and from.
      ###
      getTranslateY: ->
        if @todo.element
          @todo.element.offsetTop - @todo.element.parentNode.scrollTop
        else 0

      # HACK(iOS): When a user attempts to scroll an overflow:scroll elements 
      #            passed it's limits (top or bottom), iOS then scrolls the 
      #            document.  This doesn't work for modals, as the user will be
      #            scrolling stuff below the modal... and that's just weird.
      preventOverscroll: (e)->
        # TODO: polymer/CustomElement/something is wrapping elements in a way
        #       that scrollTop can't be set!
        el = @$.wrap.impl
        startTopScroll = el.scrollTop

        if startTopScroll <= 0
          el.scrollTop = 1

        if startTopScroll + el.offsetHeight >= el.scrollHeight
          el.scrollTop = el.scrollHeight - el.offsetHeight - 1
        return

      # HACK(iOS): Fix auto scroll on input focus.  It overscrolls everything 
      #            up, causing the cancel/back button to go offscreen.
      onNotesFocus: ->
        @asyncMethod => window.scrollTo 0,0

      onBlur: (ev,fromKeyboard)->
        @onEndEditingTodo() if fromKeyboard

      onStartEditingTodo: (e)->
        @$.editTodoText.blur()

        @.style.zIndex = 999
        # Animation before start
        @$.panelContainer.setAttribute 'style', "-webkit-transform: translate3d(0,#{@getTranslateY()}px,0);"

        requestAnimationFrame =>
          # Animation start
          @$.panelContainer.setAttribute 'style', '-webkit-transform: translate3d(0,0,0);'
          @$.btnBack.classList.add 'editing'
          @$.wrap.classList.add 'editing'

      onEndEditingTodo: ->
        # Animation start
        @$.panelContainer.setAttribute 'style', "-webkit-transform: translate3d(0,#{@getTranslateY()}px,0);"
        @$.detailedPanel.setAttribute 'style', '-webkit-transform: translate3d(0,-100%,0);'
        @$.wrap.classList.add 'bgout'
        @$.btnBack.classList.remove 'editing'

        setTimeout (=>
          @$.panelContainer.setAttribute 'style', ''
          @$.detailedPanel.setAttribute 'style', ''

          # HACK(iOS/Polymer): Fix blink when adding/removing 'editing' class 
          #                    using case statement Polymer/ExpressionSyntax 
          @$.wrap.classList.remove 'editing'
          @$.wrap.classList.remove 'bgout'
          @$.wrap.style.backgroundColor = ''
          @.style.zIndex = ''
          @fire 'collapse', @todo
        ), ANIMATION_DURATION_MS
